// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var $$String = require("bs-platform/lib/js/string.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Plastic$ReactTemplate = require("./plastic.bs.js");

function unwrapString(str) {
  if (str !== undefined) {
    return str;
  } else {
    return "";
  }
}

function unwrapInt($$int) {
  if ($$int !== undefined) {
    return String($$int);
  } else {
    return "";
  }
}

function divideIntoGroupsOfFour(str) {
  if (str.length <= 4) {
    return /* :: */[
            str,
            /* [] */0
          ];
  } else {
    return /* :: */[
            $$String.sub(str, 0, 4),
            divideIntoGroupsOfFour($$String.sub(str, 4, str.length - 4 | 0))
          ];
  }
}

function getCardNumberForDisplay(creditCardNumber) {
  return $$String.trim(Belt_List.reduce(divideIntoGroupsOfFour(creditCardNumber), "", (function (str, section) {
                    return str + (" " + section);
                  })));
}

function getExpirationForDisplay(expiration) {
  if (expiration.length >= 2 && !$$String.contains(expiration, /* "/" */47)) {
    return $$String.sub(expiration, 0, 2) + (" / " + $$String.sub(expiration, 2, expiration.length - 2 | 0));
  } else {
    return expiration;
  }
}

function handleCreditCardChange(e, param) {
  var value = e.target.value.replace((/\s/g), "");
  var valueLength = value.length;
  if (valueLength <= 16) {
    return Curry._1(param[/* send */3], /* ChangeCardNumber */Block.__(0, [
                  value,
                  Plastic$ReactTemplate.getCardType(value)
                ]));
  } else {
    return 0;
  }
}

function handleExpirationChange(e, param) {
  var rawValue = e.target.value.replace((/\s\/\s?/g), "");
  var rawValueLength = rawValue.length;
  var value;
  if (rawValueLength >= 2) {
    var match = new RegExp("^(0[1-9]|1[012])").test(rawValue);
    value = match ? $$String.trim(rawValue) : $$String.sub(rawValue, 0, 1);
  } else if (rawValueLength === 1) {
    var match$1 = Caml_format.caml_int_of_string($$String.sub(rawValue, 0, 1)) > 1;
    value = match$1 ? "0" + rawValue : $$String.trim(rawValue);
  } else {
    value = "";
  }
  var valueLength = value.length;
  if (valueLength <= 4) {
    return Curry._1(param[/* send */3], /* ChangeExpiration */Block.__(1, [value]));
  } else {
    return 0;
  }
}

function handleExpirationKeyDown(e, param) {
  var match = param[/* state */1][/* expiration */1];
  var currentState = match !== undefined ? match : "";
  var match$1 = e.key;
  var match$2 = currentState.length;
  if (match$1 === "Backspace" && match$2 === 2) {
    return Curry._1(param[/* send */3], /* ChangeExpiration */Block.__(1, [$$String.sub(currentState, 0, match$2 - 1 | 0) + " "]));
  } else {
    return /* () */0;
  }
}

function handleCvcChange(e, param) {
  var value = e.target.value;
  var valueLength = value.length;
  if (valueLength <= Plastic$ReactTemplate.getNumberOfCvcDigits(param[/* state */1][/* creditCardType */4])) {
    return Curry._1(param[/* send */3], /* ChangeCVCCode */Block.__(3, [value]));
  } else {
    return 0;
  }
}

function handleZipCodeChange(e, param) {
  var send = param[/* send */3];
  var value = $$String.trim(e.target.value);
  var valueLength = value.length;
  if (valueLength >= 1 && valueLength <= 5) {
    return Curry._1(send, /* ChangeZipCode */Block.__(2, [Caml_format.caml_int_of_string(value)]));
  } else if (valueLength < 1) {
    return Curry._1(send, /* ChangeZipCode */Block.__(2, [undefined]));
  } else {
    return 0;
  }
}

var component = ReasonReact.reducerComponent("ReactPlastic");

function make(children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var match = param[/* state */1];
              var handle = param[/* handle */0];
              return React.createElement("div", undefined, Curry._1(children, {
                              cardNumber: unwrapString(match[/* cardNumber */0]),
                              expiration: unwrapString(match[/* expiration */1]),
                              zipCode: unwrapInt(match[/* zipCode */2]),
                              cvc: unwrapInt(match[/* cvc */3]),
                              creditCardType: Plastic$ReactTemplate.getTypeString(match[/* creditCardType */4]),
                              getCardNumberForDisplay: getCardNumberForDisplay,
                              getExpirationForDisplay: getExpirationForDisplay,
                              handleCvcChange: Curry._1(handle, handleCvcChange),
                              handleZipCodeChange: Curry._1(handle, handleZipCodeChange),
                              handleExpirationChange: Curry._1(handle, handleExpirationChange),
                              handleCreditCardChange: Curry._1(handle, handleCreditCardChange),
                              handleExpirationKeyDown: Curry._1(handle, handleExpirationKeyDown)
                            }));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* cardNumber */undefined,
                      /* expiration */undefined,
                      /* zipCode */undefined,
                      /* cvc */undefined,
                      /* creditCardType */undefined
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* cardNumber */action[0],
                                /* expiration */state[/* expiration */1],
                                /* zipCode */state[/* zipCode */2],
                                /* cvc */state[/* cvc */3],
                                /* creditCardType */action[1]
                              ]]);
                case 1 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* cardNumber */state[/* cardNumber */0],
                                /* expiration */action[0],
                                /* zipCode */state[/* zipCode */2],
                                /* cvc */state[/* cvc */3],
                                /* creditCardType */state[/* creditCardType */4]
                              ]]);
                case 2 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* cardNumber */state[/* cardNumber */0],
                                /* expiration */state[/* expiration */1],
                                /* zipCode */action[0],
                                /* cvc */state[/* cvc */3],
                                /* creditCardType */state[/* creditCardType */4]
                              ]]);
                case 3 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* cardNumber */state[/* cardNumber */0],
                                /* expiration */state[/* expiration */1],
                                /* zipCode */state[/* zipCode */2],
                                /* cvc */action[0],
                                /* creditCardType */state[/* creditCardType */4]
                              ]]);
                
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.unwrapString = unwrapString;
exports.unwrapInt = unwrapInt;
exports.divideIntoGroupsOfFour = divideIntoGroupsOfFour;
exports.getCardNumberForDisplay = getCardNumberForDisplay;
exports.getExpirationForDisplay = getExpirationForDisplay;
exports.handleCreditCardChange = handleCreditCardChange;
exports.handleExpirationChange = handleExpirationChange;
exports.handleExpirationKeyDown = handleExpirationKeyDown;
exports.handleCvcChange = handleCvcChange;
exports.handleZipCodeChange = handleZipCodeChange;
exports.component = component;
exports.make = make;
/* component Not a pure module */
